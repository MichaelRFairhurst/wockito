import MockFileGenerator;
import MockStubberFileGenerator;
import MockVerifierFileGenerator;
import File;
import FileSystem;
import FilePath;
import TableFileReader;
import TableDirectoryScanner;
import NameTransformer;
import WakeClass;
import MethodIterator;
import CommaStatementGenerator;
import MockProviderFileGenerator;
import MockGenerationOptions;
import WakeClassMocker;
import WakePropertyMocker;

every Main is:

	needs FileSystem, TableFileReader, TableDirectoryScanner, MockProviderFileGenerator, MockGenerationOptions;

	provides
		MethodIterator,
		MockFileGenerator,
		MockStubberFileGenerator,
		MockVerifierFileGenerator,
		NameTransformer,
		File <- { return File <- (FilePath <- this); },
		FilePath <- { return FileSystem.getPath(MockGenerationOptions.outputfile); },
		CommaStatementGenerator,
		WakeClassMocker, WakePropertyMocker;

	main() {
		MockGenerationOptions.parse();
		if(MockGenerationOptions.generateProvider) {
			var WakeClass[] = [];

			var FilePath <- this;
			FilePath.delete();
			var $File <- this;

			$File.write('import When;\n');
			$File.write('import ArgumentWatcher;\n');
			$File.write('import MockTracker;\n');
			$File.write('import CallValidator;\n');
			$File.write('import TimesCalledValidator;\n');
			$File.write('import Asserts;\n');

			var Text[] = MockGenerationOptions.mockedClasses;
			foreach(Text[]) {
				var File <- FileSystem.getPath(MockGenerationOptions.tabledir + '/' + Text + ".table");

				WakeClass[].push(TableFileReader.readFrom(File));
				$File.write('import ' + Text + 'Mock;\n');
				$File.write('import ' + Text + 'Stubber;\n');
				$File.write('import ' + Text + 'Verifier;\n');
			}

			MockProviderFileGenerator.generate($File, WakeClass[]);
		} else {
			var File <- FileSystem.getPath(MockGenerationOptions.tabledir + '/' + MockGenerationOptions.mockedClassname + ".table");

			var WakeClass = TableFileReader.readFrom(File);

			var FilePath <- this;
			FilePath.delete();
			var $File <- this;

			$File.write('import When;\n');
			$File.write('import ArgumentWatcher;\n');
			$File.write('import MockTracker;\n');
			$File.write('import CallValidator;\n');

			if(!WakeClass.getApiImports().contains(WakeClass.classname))
				$File.write('import ' + WakeClass.classname + ';\n');

			foreach(WakeClass.getApiImports()) { // @TODO foreach as
				$File.write("import " + Text + ";\n");
			}

			var MockStubberFileGenerator <- this;
			MockStubberFileGenerator.generate(WakeClass);

			var MockVerifierFileGenerator <- this;
			MockVerifierFileGenerator.generate(WakeClass);

			var MockFileGenerator <- this;
			MockFileGenerator.generate(WakeClass);
		}
	}
