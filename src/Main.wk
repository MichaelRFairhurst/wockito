import MockFileGenerator;
import MockStubberFileGenerator;
import MockVerifierFileGenerator;
import File;
import FileSystem;
import FilePath;
import TableFileReader;
import TableDirectoryScanner;
import NameTransformer;
import WakeClass;
import MethodIterator;
import CommaStatementGenerator;

every Main is:

	needs FileSystem, TableFileReader, TableDirectoryScanner;

	provides
		MethodIterator,
		MockFileGenerator,
		MockStubberFileGenerator,
		MockVerifierFileGenerator,
		NameTransformer,
		File <- { return File <- FileSystem.getPath("MockFilePath.wk"); },
		CommaStatementGenerator;

	main() {
		var File <- FileSystem.getPath("bin/waketable/FilePath.table");

		var WakeClass = TableFileReader.readFrom(File);

		var $File <- this;

		$File.write('import When;\n');
		$File.write('import ArgumentWatcher;\n');
		$File.write('import MockTracker;\n');
		$File.write('import CallValidator;\n');

		if(!WakeClass.getApiImports().contains(WakeClass.classname))
			$File.write('import ' + WakeClass.classname + ';\n');

		foreach(WakeClass.getApiImports()) { // @TODO foreach as
			$File.write("import " + Text + ";\n");
		}

		var MockStubberFileGenerator <- this;
		MockStubberFileGenerator.generate(WakeClass);

		var MockVerifierFileGenerator <- this;
		MockVerifierFileGenerator.generate(WakeClass);

		var MockFileGenerator <- this;
		MockFileGenerator.generate(WakeClass);
	}
