import File;
import WakeClass;

#>
# Generates code along the lines of:
#
# every ExampleMock is:
#
#	needs ArgumentWatcher{Text, Text}:ExampleMockZgetZpTextZcNumZpZa1 getZpTextZcNumZpZa1, ArgumentWatcher{Num, Text}:ExampleMockZgetZpTextZcNumZpZa2 getZpTextZcNumZpZa2, public ExampleMockStubber, CrossFilter{ReturnValueStubber{Text}}, public ExampleMockVerifier;
#
#	Text -- get(Text, Num) {
#		var ReturnValueStubber{Text}[] = getZpTextZcNumZpZa1.getPossibleStubs(Text);
#		ReturnValueStubber = CrossFilter.intersect(ReturnValueStubber)With(getZpTextZcNumZpZa2.getPossibleStubs(Num));
#		return ReturnValueStubber[0].get();
#	}
##
every MockFileGenerator is:

	generate(WakeClass, File) {
		File.write("every " + WakeClass.classname + "Mock (capable " + WakeClass.classname + ") is:");
	}
