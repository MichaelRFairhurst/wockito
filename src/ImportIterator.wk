import MethodIterator;
import ArgumentIterator;
import MethodIteration;
import ArgumentIteration;
import WakeClass;
import WakeType;
import WakeProperty;
import NameTransformer;

every ImportIterator (an ArgumentIterator, capable ArgumentIteration) is:

	needs NameTransformer then {
		set((cast ArgumentIteration) this);
	}

	with Text[] imports = [];

	iterate(WakeClass, WakeProperty, WakeType? returntype, WakeType arg, Num argnum) {
		addImports(arg.getNeededImports());

		if returntype exists {
			addImports(returntype.getNeededImports());
		}
	}

	addImports(Text[]) {
		foreach(Text[]) addImport(Text);
	}

	addImport(Text) {
		if(!imports.contains(Text)) imports.push(Text);
	}

	Text[] -- getImports() {
		return imports;
	}
