import ArgumentWatcher;
import ReturnValueStubber;
import CallValidator;
import Asserts;
import TimesCalledValidator;

every ExampleMockStubber is:

	needs ArgumentWatcher{Text, Text}:getZpTextZcNumZpZa1 getZpTextZcNumZpZa1, ArgumentWatcher{Num, Text}:getZpTextZcNumZpZa2 getZpTextZcNumZpZa2;

	provides ReturnValueStubber{Text};

	ReturnValueStubber{Text} -- get(Text, Num) {
		var ReturnValueStubber{Text} <- this;
		getZpTextZcNumZpZa1.expect(Text, ReturnValueStubber);
		getZpTextZcNumZpZa2.expect(Num, ReturnValueStubber);
		return ReturnValueStubber;
	}

every ExampleMock is:

	needs ArgumentWatcher{Text, Text} getZpTextZcNumZpZa1, ArgumentWatcher{Num, Text} getZpTextZcNumZpZa2;

	provides
		ArgumentWatcher{Text, Text}:getZpTextZcNumZpZa1 <- { return getZpTextZcNumZpZa1; },
		ArgumentWatcher{Num, Text}:getZpTextZcNumZpZa2 <- { return getZpTextZcNumZpZa2; },
		ExampleMockStubber,
		ExampleMockVerifier;

	Text -- get(Text, Num) {
		var ReturnValueStubber{Text}[] = getZpTextZcNumZpZa1.getPossibleStubs(Text);
		ReturnValueStubber = ReturnValueStubber.intersect(getZpTextZcNumZpZa2.getPossibleStubs(Num));
		return ReturnValueStubber[0].get();
	}

every ExampleMockVerifier is:

	needs ArgumentWatcher{Text, Text}:getZpTextZcNumZpZa1 getZpTextZcNumZpZa1, ArgumentWatcher{Num, Text}:getZpTextZcNumZpZa2 getZpTextZcNumZpZa2;

	with public CallValidator? = nothing;

	get(Text, Num) {
		var Num[] calls = getZpTextZcNumZpZa1.getCallIndices(Text);
		calls = calls.intersect(getZpTextZcNumZpZa2.getCallIndices(Num));
		var $CallValidator? = CallValidator; // bugfix.....
		if $CallValidator exists {
			$CallValidator.validate(calls);
		}
	}

every MockProvider is:

	with Asserts[] = [];

	use($Asserts) {
		Asserts[0] = $Asserts;
	}

	provides ExampleMock,
		ArgumentWatcher{Text, Text},
		ArgumentWatcher{Num, Text},
		Asserts <- { return Asserts[0]; },
		TimesCalledValidator;

	ExampleMockStubber -- when(ExampleMock) {
		return ExampleMockStubber <- ExampleMock;
	}

	ExampleMockVerifier -- verify(ExampleMock) {
		var TimesCalledValidator <- this;
		var ExampleMockVerifier <- ExampleMock;
		ExampleMockVerifier.CallValidator = TimesCalledValidator;
		return ExampleMockVerifier;
	}

	ExampleMockVerifier -- verify(Num)Times(ExampleMock) {
		var TimesCalledValidator <- this;
		TimesCalledValidator.minExpectedTimes = Num;
		TimesCalledValidator.maxExpectedTimes = Num;
		var ExampleMockVerifier <- ExampleMock;
		ExampleMockVerifier.CallValidator = TimesCalledValidator;
		return ExampleMockVerifier;
	}
