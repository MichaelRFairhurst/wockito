module wkto;

import wkto.When;

every ArgumentWatcher{T, R} is:

	with T[] calls = [];
	with Int[] callNums = [];

	with When{R}[] stubs = [];
	with T[] matches = [];

	tell(T, Int) {
		calls.push(T);
		callNums.push(Int);
	}

	T[] -- getCalls() {
		return calls;
	}

	Int[] -- getCallIndices(T) {
		var Int[] = [];
		foreach call in calls at i {
			if call == T {
				Int[].push(callNums[i]);
			}
		}

		return Int[];
	}

	expect(T, When{R}) {
		matches.push(T);
		stubs.push(When);
	}

	When{R}[] -- getPossibleStubs(T) {
		var When{R}[] ret = [];
		foreach match in matches at i {
			if match == T {
				ret.push(stubs[i]);
			}
		}

		return ret;
	}
